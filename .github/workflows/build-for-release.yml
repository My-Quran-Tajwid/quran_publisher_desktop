name: Build Windows & Linux Executable on Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  extract_version:
    name: üìù Extract App Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Extract version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep -oP 'version:\s*\K[\d\.]+(?=\+)' pubspec.yaml)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

  build_windows:
    name: ü™ü Build Windows App
    needs: extract_version
    runs-on: windows-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Build App
        run: |
          flutter pub get
          flutter build windows --release
      - name: Download Visual C++ Redistributable DLLs
        run: |
          Invoke-WebRequest -Uri "https://github.com/My-Quran-Tajwid/visual-cpp-redistributable/archive/refs/heads/main.zip" -OutFile "vcredist.zip"
          Expand-Archive -Path "vcredist.zip" -DestinationPath "temp_vcredist"
          Copy-Item -Path "temp_vcredist\visual-cpp-redistributable-main\*.dll" -Destination "build\windows\x64\runner\Release\" -Force
      - name: Create Windows zip archive
        run: cd build/windows/x64/runner/Release/ && powershell Compress-Archive -Path * -DestinationPath "MQJ-${{ needs.extract_version.outputs.version }}-windows-x64.zip"
      - name: Run Inno Setup Compiler
        run: |
          choco install innosetup -y
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" "inno-compiler\inno-build-installer.iss"
        shell: cmd
      - name: Rename installer to include version
        run: |
          Move-Item -Path "build\installer\app-windows-installer.exe" -Destination "MQJ-${{ needs.extract_version.outputs.version }}-windows-64-installer.exe" -Force
      - name: Upload Windows App to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/windows/x64/runner/Release/MQJ-${{ needs.extract_version.outputs.version }}-windows-x64.zip
            MQJ-${{ needs.extract_version.outputs.version }}-windows-64-installer.exe

  build_linux:
    name: üêß Build Linux App
    needs: extract_version
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - name: Build App
        run: |
          flutter pub get
          flutter build linux --release
      - name: Create Linux zip archive
        run: cd build/linux/x64/release/bundle/ && zip -r "MQJ-${{ needs.extract_version.outputs.version }}-linux-x64.zip" *
      - name: Upload Linux App to release
        uses: softprops/action-gh-release@v1
        with:
          files: build/linux/x64/release/bundle/MQJ-${{ needs.extract_version.outputs.version }}-linux-x64.zip

  build_macos:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Flutter build for MacOS
        run: |
          flutter pub get
          flutter build macos

      - name: Install appdmg
        run: |
          npm install -g appdmg

      - name: Building the installer
        run: |
          appdmg appdmg/config.json appdmg/QuranPublisherDesktop-Macos.dmg

      - name: Upload MacOS App to release
        uses: softprops/action-gh-release@v1
        with:
          files: appdmg/QuranPublisherDesktop-Macos.dmg
